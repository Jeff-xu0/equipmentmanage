<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paki.equip.dao.RepairMapper" >
  <resultMap id="BaseResultMap" type="com.paki.equip.pojo.Repair" >
    <constructor >
      <idArg column="repairid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reason" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="repairtime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="repairmanid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="result" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="equid" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    repairid, reason, repairtime, repairmanid, result, equid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.paki.equip.pojo.RepairExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from repair
    where repairid = #{repairid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from repair
    where repairid = #{repairid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.paki.equip.pojo.RepairExample" >
    delete from repair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.paki.equip.pojo.Repair" >
    insert into repair (repairid, reason, repairtime, 
      repairmanid, result, equid
      )
    values (#{repairid,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, #{repairtime,jdbcType=TIMESTAMP}, 
      #{repairmanid,jdbcType=INTEGER}, #{result,jdbcType=BIT}, #{equid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.paki.equip.pojo.Repair" >
    insert into repair
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="repairid != null" >
        repairid,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="repairtime != null" >
        repairtime,
      </if>
      <if test="repairmanid != null" >
        repairmanid,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="equid != null" >
        equid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="repairid != null" >
        #{repairid,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="repairtime != null" >
        #{repairtime,jdbcType=TIMESTAMP},
      </if>
      <if test="repairmanid != null" >
        #{repairmanid,jdbcType=INTEGER},
      </if>
      <if test="result != null" >
        #{result,jdbcType=BIT},
      </if>
      <if test="equid != null" >
        #{equid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.paki.equip.pojo.RepairExample" resultType="java.lang.Integer" >
    select count(*) from repair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update repair
    <set >
      <if test="record.repairid != null" >
        repairid = #{record.repairid,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.repairtime != null" >
        repairtime = #{record.repairtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repairmanid != null" >
        repairmanid = #{record.repairmanid,jdbcType=INTEGER},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=BIT},
      </if>
      <if test="record.equid != null" >
        equid = #{record.equid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update repair
    set repairid = #{record.repairid,jdbcType=INTEGER},
      reason = #{record.reason,jdbcType=VARCHAR},
      repairtime = #{record.repairtime,jdbcType=TIMESTAMP},
      repairmanid = #{record.repairmanid,jdbcType=INTEGER},
      result = #{record.result,jdbcType=BIT},
      equid = #{record.equid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.paki.equip.pojo.Repair" >
    update repair
    <set >
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="repairtime != null" >
        repairtime = #{repairtime,jdbcType=TIMESTAMP},
      </if>
      <if test="repairmanid != null" >
        repairmanid = #{repairmanid,jdbcType=INTEGER},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=BIT},
      </if>
      <if test="equid != null" >
        equid = #{equid,jdbcType=INTEGER},
      </if>
    </set>
    where repairid = #{repairid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paki.equip.pojo.Repair" >
    update repair
    set reason = #{reason,jdbcType=VARCHAR},
      repairtime = #{repairtime,jdbcType=TIMESTAMP},
      repairmanid = #{repairmanid,jdbcType=INTEGER},
      result = #{result,jdbcType=BIT},
      equid = #{equid,jdbcType=INTEGER}
    where repairid = #{repairid,jdbcType=INTEGER}
  </update>
</mapper>